<Window x:Class="MyEdit.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:t="clr-namespace:Simple.Wpf.Terminal;assembly=Simple.Wpf.Terminal"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        Title="MainWindow" Height="350" Width="525" WindowStyle="ToolWindow" WindowState="Maximized">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Light Theme -->
                <ResourceDictionary Source="Themes/Light/Metro.MSControls.Core.Implicit.xaml" />
                <ResourceDictionary Source="Themes/Light/Metro.MSControls.Toolkit.Implicit.xaml" />

                <!-- Dark Theme -->
                <!--<ResourceDictionary Source="Themes/Dark/MetroDark.MSControls.Core.Implicit.xaml" />
                <ResourceDictionary Source="Themes/Dark/MetroDark.MSControls.Toolkit.Implicit.xaml" />-->

            </ResourceDictionary.MergedDictionaries>

            <!-- Light Theme -->
            <SolidColorBrush x:Key="BackgroundKey" Color="#FFFFFF" />

            <!-- Dark Theme -->
            <!--<SolidColorBrush x:Key="BackgroundKey" Color="#FF181818" />-->

        </ResourceDictionary>
    </Window.Resources>

    <DockPanel LastChildFill="True" Background="{StaticResource BackgroundKey}" >
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_Open" Click="MenuItem_Click"/>
                <MenuItem Header="_Open Folder" Click="MenuItem_Click_1"/>
                <MenuItem Header="_Close"/>
                <MenuItem Header="_Save"/>
            </MenuItem>
        </Menu>
        <ToolBar DockPanel.Dock="Top">
            <ToolBar.Resources>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
                            <Setter Property="Opacity" Value="0.30" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ToolBar.Resources>
            <Button Click="Button_Click_1">
                <Image Source="/Images/Open.png" Height="16"/>
            </Button>
            <Button Click="Save">
                <Image Source="/Images/Save.png" Height="16"/>
            </Button>
            <Separator/>
            <Button Command="Cut">
                <Image Source="/Images/Cut.png" Height="16"/>
            </Button>
            <Button Command="Copy">
                <Image Source="/Images/Copy.png" Height="16"/>
            </Button>
            <Button Command="Paste">
                <Image Source="/Images/Paste.png" Height="16"/>
            </Button>
            <Button Command="Delete">
                <Image Source="/Images/Delete.png" Height="16"/>
            </Button>
            <Separator/>
            <Button Command="Undo">
                <Image Source="/Images/Undo.png" Height="16"/>
            </Button>
            <Button Command="Redo">
                <Image Source="/Images/Redo.png" Height="16"/>
            </Button>
            <Separator/>
            <CheckBox IsChecked="{Binding ElementName=textEditor,Path=WordWrap}">
                <Image Source="/Images/WordWrap.png" Height="16"/>
            </CheckBox>
            <CheckBox IsChecked="{Binding ElementName=textEditor,Path=ShowLineNumbers}">
                <TextBlock Width="16" TextAlignment="Center">#</TextBlock>
            </CheckBox>
            <CheckBox IsChecked="{Binding ElementName=textEditor,Path=Options.ShowEndOfLine}">
                <TextBlock Width="16" TextAlignment="Center">¶</TextBlock>
            </CheckBox>
        </ToolBar>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" ></ColumnDefinition>
                <ColumnDefinition Width="5" ></ColumnDefinition>
                <ColumnDefinition  Width="2*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TreeView Grid.Column="0" Name="trvMenu" SelectedItemChanged="trvMenu_SelectedItemChanged">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type MenuItem}" ItemsSource="{Binding Items}">
                        <TextBlock Text="{Binding Title}" />
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
            <GridSplitter 
                        Grid.Column="1" 
                        VerticalAlignment="Stretch" 
                        HorizontalAlignment="Center" 
                        ResizeDirection="Columns"
                        ShowsPreview="True"  Width="5"  Cursor="SizeWE"   />

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="5" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TabControl ItemsSource="{Binding PageModels, Mode=TwoWay}" SelectionChanged="TabControl_SelectionChanged">
                    <TabControl.ItemContainerStyle>
                        <Style TargetType="TabItem">
                            <Setter Property="Header" Value="{Binding TabCaption, Mode=TwoWay}"/>
                            <Setter Property="Content" Value="{Binding TabContent}"/>
                            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                        </Style>
                    </TabControl.ItemContainerStyle>
                </TabControl>
                <GridSplitter 
                        Grid.ColumnSpan="1"
                        Grid.Row="1" 
                        VerticalAlignment="Center" 
                        HorizontalAlignment="Stretch" 
                        ResizeDirection="Rows"
                        ShowsPreview="True"  Height="5"  Cursor="SizeNS"   />
                <t:Terminal Grid.Row="2" Grid.Column="0" x:Name="TerminalOutput"
                    IsReadOnlyCaretVisible="False"
                    VerticalScrollBarVisibility="Visible"
                    IsReadOnly="false"
                    Prompt=">"
                    ItemsSource="{Binding Path=Items, Mode=OneWay}">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="LineEntered">
                            <i:InvokeCommandAction Command="{Binding Path=ExecuteItemCommand, Mode=OneWay}"
                                           CommandParameter="{Binding Path=Line, Mode=OneWay, ElementName=TerminalOutput}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                </t:Terminal>
            </Grid>

        </Grid>
    </DockPanel>
</Window>
